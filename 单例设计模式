//懒汉式：在第一次调用的时候实例化自己 
class Single
{
	private static Single s = null;
	private Single(){}
	public static synchronized  Single getInstance()
	{		
		if(s == null)			
			s = new Single();		
		return s;
	}
}

//懒汉式优化
class Single
{
	private static Single s = null;
	private Single(){}
	public static  Single getInstance()
	{
		if(s==null)
		{
			synchronized(Single.class)
			{
				if(s == null)			
					s = new Single();
			}
		}
		return s;
	}
}

//饿汉式：在类初始化时，已经自行实例化 
class Single
{
	private static final Single s = new Single();
	private Single(){}
	public static Single getInstance()
	{			
		return s;
	}
}


